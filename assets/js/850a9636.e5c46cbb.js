"use strict";(self.webpackChunkcasdk_docs=self.webpackChunkcasdk_docs||[]).push([[8909],{4678:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});var a=s(4848),i=s(8453);const r={},o="Java Client Example",t={id:"samples/java-client/README",title:"Java Client Example",description:"This folder contains an example for WebAPI client in Java. Client library would be pulled from GitHub Packages.",source:"@site/docs/samples/java-client/README.md",sourceDirName:"samples/java-client",slug:"/samples/java-client/",permalink:"/docs/samples/java-client/",draft:!1,unlisted:!1,editUrl:"https://github.com/Green-Software-Foundation/carbon-aware-sdk/docs/samples/java-client/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Carbon Aware SDK demonstration on Podman",permalink:"/docs/samples/casdk-demo/"},next:{title:"Run Sample Console App",permalink:"/docs/samples/lib-integration/ConsoleApp/"}},l={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Client code",id:"client-code",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"1. Set up for POM",id:"1-set-up-for-pom",level:3},{value:"2. Build",id:"2-build",level:3},{value:"3. Run",id:"3-run",level:3},{value:"Running in container",id:"running-in-container",level:3},{value:"1. Create pod",id:"1-create-pod",level:4},{value:"2. Start WebAPI container",id:"2-start-webapi-container",level:4},{value:"3. Run Maven in the container",id:"3-run-maven-in-the-container",level:4}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"java-client-example",children:"Java Client Example"})}),"\n",(0,a.jsxs)(n.p,{children:["This folder contains an example for WebAPI client in Java. Client library would be pulled from ",(0,a.jsx)(n.a,{href:"https://github.com/orgs/Green-Software-Foundation/packages?repo_name=carbon-aware-sdk",children:"GitHub Packages"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Javadoc is ",(0,a.jsx)(n.a,{href:"https://carbon-aware-sdk.greensoftware.foundation/client-apidocs/1.0.0/java",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["WebAPI instance","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["See the ",(0,a.jsx)(n.a,{href:"../../docs/overview.md#publish-webapi-with-container",children:"Overview"})," if you'd like to start it on container."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Java 8 or later"}),"\n",(0,a.jsx)(n.li,{children:"Maven"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"client-code",children:"Client code"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(1615).A+"",children:"WebApiClient.java"})," is an example program to call WebAPI endpoint. It calls all of endpoints, and shows the result."]}),"\n",(0,a.jsx)(n.p,{children:"Following methods are available:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"processBestEmissionsDataByLocations"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Call /emissions/bylocations/best"}),"\n",(0,a.jsx)(n.li,{children:"Shows result of the best emission data for west/central/east US yesterday."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"processEmissionsDataByLocations"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Call /emissions/bylocations"}),"\n",(0,a.jsx)(n.li,{children:"Shows top of result of emission data for west/central/east US yesterday."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"processEmissionsDataByLocation"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Call /emissions/bylocation"}),"\n",(0,a.jsx)(n.li,{children:"Shows top of result of emission data for westus yesterday."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"processCurrentForecastData"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Call /emissions/forecasts/current"}),"\n",(0,a.jsx)(n.li,{children:"Shows top of forecast data for westus."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"processForecastBatchData"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Call /emissions/forecasts/batch"}),"\n",(0,a.jsx)(n.li,{children:"Shows forecast data for westus."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"processAverageData"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Call /emissions/average-carbon-intensity ."}),"\n",(0,a.jsx)(n.li,{children:"Shows average data for westus yesterday."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"processAverageBatchData"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Call /emissions/average-carbon-intensity/batch"}),"\n",(0,a.jsx)(n.li,{children:"Shows average data for westus yesterday."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html",children:"OffsetDateTime"})," is used for parameters in each APIs. However the error occurs if nano sec is set to it in case of WattTime. So it is highly recommended that clears nanosec field like ",(0,a.jsx)(n.code,{children:"withNano(0)"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,a.jsxs)(n.h3,{id:"1-set-up-for-pom",children:["1. Set up for ",(0,a.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(7993).A+"",children:"POM"})]}),"\n",(0,a.jsx)(n.p,{children:"You need to change following properties:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"webapi.endpoint"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"WebAPI base URL"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"2-build",children:"2. Build"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ mvn clean package\n"})}),"\n",(0,a.jsx)(n.h3,{id:"3-run",children:"3. Run"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ mvn exec:java\n"})}),"\n",(0,a.jsx)(n.h3,{id:"running-in-container",children:"Running in container"}),"\n",(0,a.jsxs)(n.p,{children:["This example also can run in container. You can use ",(0,a.jsx)(n.a,{href:"https://hub.docker.com/_/maven",children:"Maven official image"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"If you want to run both WebAPI and build process in container, you need to join 2 containers to same network."}),"\n",(0,a.jsx)(n.p,{children:"Following instructions are for Podman."}),"\n",(0,a.jsx)(n.h4,{id:"1-create-pod",children:"1. Create pod"}),"\n",(0,a.jsxs)(n.p,{children:["This pod publishes port 80 in the pod to 8080 on the host, then you can access WebAPI in the pod. The pod is named to ",(0,a.jsx)(n.code,{children:"carbon-aware-sdk"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"podman pod create -p 8080:80 --name carbon-aware-sdk\n"})}),"\n",(0,a.jsx)(n.h4,{id:"2-start-webapi-container",children:"2. Start WebAPI container"}),"\n",(0,a.jsxs)(n.p,{children:["Start WebAPI container in ",(0,a.jsx)(n.code,{children:"carbon-aware-sdk"})," pod. It is specified at ",(0,a.jsx)(n.code,{children:"--pod"})," option."]}),"\n",(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.a,{href:"../../docs/overview.md",children:"Overview"})," document to build container image."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ podman run -it --rm --pod carbon-aware-sdk \\\n    -e CarbonAwareVars__CarbonIntensityDataSource="WattTime" \\\n    -e WattTimeClient__Username="wattTimeUsername" \\\n    -e WattTimeClient__Password="wattTimePassword" \\\n  carbon-aware-sdk-webapi\n'})}),"\n",(0,a.jsx)(n.h4,{id:"3-run-maven-in-the-container",children:"3. Run Maven in the container"}),"\n",(0,a.jsxs)(n.p,{children:["Run ",(0,a.jsx)(n.code,{children:"mvn"})," command in Maven container in ",(0,a.jsx)(n.code,{children:"catbon-aware-sdk"})," pod. You need to mount Carbon Aware SDK source directory to the container. It mounts to ",(0,a.jsx)(n.code,{children:"/src"})," in the container in following case."]}),"\n",(0,a.jsxs)(n.p,{children:["In following command, you can rebuild java-client, and can run the artifact. You can get artifacts from ",(0,a.jsx)(n.code,{children:"samples/java-client/target"})," on the container host of course."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ podman run -it --rm --pod carbon-aware-sdk \\\n    -v `pwd`/carbon-aware-sdk:/src:Z  \\\n  docker.io/maven:3.8-eclipse-temurin-8 \\\n    mvn -f /src/samples/java-client/pom.xml clean package exec:java\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Maven will download many dependencies in each ",(0,a.jsx)(n.code,{children:"mvn"})," call. You can avoid it when you mount ",(0,a.jsx)(n.code,{children:".m2"})," like ",(0,a.jsx)(n.code,{children:"-v $HOME/.m2:/root/.m2"})," because it shares Maven cache between the host and the container."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},7993:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/files/pom-ab2724ef8af3f60dee618727cc48ad65.xml"},1615:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/files/WebApiClient-5d0f777f44a61b4f4e34b73437b8bd64.java"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var a=s(6540);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);